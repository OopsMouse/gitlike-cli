0 info it worked if it ends with ok
1 verbose cli [ 'c:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'c:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@1.2.18
3 info using node@v0.10.5
4 verbose publish [ '.' ]
5 verbose read json z:\Documents\GitHub\gitlike-cli\package.json
6 verbose cache add [ '.', null ]
7 verbose cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: '.',
8 verbose parsed url   path: '.',
8 verbose parsed url   href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . C:\Users\Jed\AppData\Roaming\npm-cache\3a52ce78-.lock
11 verbose read json package.json
12 verbose tar pack [ 'C:\\Users\\Jed\\AppData\\Local\\Temp\\npm-2108\\1370242992366-0.9706555898301303\\tmp.tgz',
12 verbose tar pack   '.' ]
13 verbose tarball C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\tmp.tgz
14 verbose folder .
15 info prepublish gitlike-cli@0.0.1
16 silly lockFile 3a52ce78- .
17 verbose lock . C:\Users\Jed\AppData\Roaming\npm-cache\3a52ce78-.lock
18 silly lockFile 5071c045-92366-0-9706555898301303-tmp-tgz C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\tmp.tgz
19 verbose lock C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\tmp.tgz C:\Users\Jed\AppData\Roaming\npm-cache\5071c045-92366-0-9706555898301303-tmp-tgz.lock
20 silly lockFile 3a52ce78- .
21 silly lockFile 3a52ce78- .
22 silly lockFile 5071c045-92366-0-9706555898301303-tmp-tgz C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\tmp.tgz
23 silly lockFile 5071c045-92366-0-9706555898301303-tmp-tgz C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\tmp.tgz
24 verbose tar unpack C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\tmp.tgz
25 silly lockFile b8ea29b3-92366-0-9706555898301303-package C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\package
26 verbose lock C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\package C:\Users\Jed\AppData\Roaming\npm-cache\b8ea29b3-92366-0-9706555898301303-package.lock
27 silly lockFile 5071c045-92366-0-9706555898301303-tmp-tgz C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\tmp.tgz
28 verbose lock C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\tmp.tgz C:\Users\Jed\AppData\Roaming\npm-cache\5071c045-92366-0-9706555898301303-tmp-tgz.lock
29 silly gunzTarPerm modes [ '755', '644' ]
30 silly gunzTarPerm extractEntry package.json
31 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
32 silly gunzTarPerm extractEntry .npmignore
33 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
34 silly gunzTarPerm extractEntry README.md
35 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
36 silly gunzTarPerm extractEntry index.js
37 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
38 silly gunzTarPerm extractEntry examples/coercion
39 silly gunzTarPerm modified mode [ 'examples/coercion', 438, 420 ]
40 silly gunzTarPerm extractEntry examples/custom-help
41 silly gunzTarPerm modified mode [ 'examples/custom-help', 438, 420 ]
42 silly gunzTarPerm extractEntry examples/defaults
43 silly gunzTarPerm modified mode [ 'examples/defaults', 438, 420 ]
44 silly gunzTarPerm extractEntry examples/deploy
45 silly gunzTarPerm modified mode [ 'examples/deploy', 438, 420 ]
46 silly gunzTarPerm extractEntry examples/express
47 silly gunzTarPerm modified mode [ 'examples/express', 438, 420 ]
48 silly gunzTarPerm extractEntry examples/help
49 silly gunzTarPerm modified mode [ 'examples/help', 438, 420 ]
50 silly gunzTarPerm extractEntry examples/pizza
51 silly gunzTarPerm modified mode [ 'examples/pizza', 438, 420 ]
52 silly gunzTarPerm extractEntry examples/pm
53 silly gunzTarPerm modified mode [ 'examples/pm', 438, 420 ]
54 silly gunzTarPerm extractEntry examples/pm-install
55 silly gunzTarPerm modified mode [ 'examples/pm-install', 438, 420 ]
56 silly gunzTarPerm extractEntry .gitattributes
57 silly gunzTarPerm modified mode [ '.gitattributes', 438, 420 ]
58 silly gunzTarPerm extractEntry lib/Argument.js
59 silly gunzTarPerm modified mode [ 'lib/Argument.js', 438, 420 ]
60 silly gunzTarPerm extractEntry lib/CLIError.js
61 silly gunzTarPerm modified mode [ 'lib/CLIError.js', 438, 420 ]
62 silly gunzTarPerm extractEntry lib/CLIObject.js
63 silly gunzTarPerm modified mode [ 'lib/CLIObject.js', 438, 420 ]
64 silly gunzTarPerm extractEntry lib/Command.js
65 silly gunzTarPerm modified mode [ 'lib/Command.js', 438, 420 ]
66 silly gunzTarPerm extractEntry lib/Option.js
67 silly gunzTarPerm modified mode [ 'lib/Option.js', 438, 420 ]
68 silly gunzTarPerm extractEntry lib/util/array.js
69 silly gunzTarPerm modified mode [ 'lib/util/array.js', 438, 420 ]
70 silly gunzTarPerm extractEntry lib/util/index.js
71 silly gunzTarPerm modified mode [ 'lib/util/index.js', 438, 420 ]
72 silly gunzTarPerm extractEntry lib/util/object.js
73 silly gunzTarPerm modified mode [ 'lib/util/object.js', 438, 420 ]
74 silly gunzTarPerm extractEntry lib/util/string.js
75 silly gunzTarPerm modified mode [ 'lib/util/string.js', 438, 420 ]
76 silly gunzTarPerm extractEntry .editorconfig
77 silly gunzTarPerm modified mode [ '.editorconfig', 438, 420 ]
78 silly gunzTarPerm extractEntry .travis.yml
79 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
80 silly gunzTarPerm extractEntry test/Argument.js
81 silly gunzTarPerm modified mode [ 'test/Argument.js', 438, 420 ]
82 silly gunzTarPerm extractEntry test/Command.js
83 silly gunzTarPerm modified mode [ 'test/Command.js', 438, 420 ]
84 silly gunzTarPerm extractEntry test/Option.js
85 silly gunzTarPerm modified mode [ 'test/Option.js', 438, 420 ]
86 verbose read json C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\package\package.json
87 silly lockFile b8ea29b3-92366-0-9706555898301303-package C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\package
88 silly lockFile b8ea29b3-92366-0-9706555898301303-package C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\package
89 silly lockFile 5071c045-92366-0-9706555898301303-tmp-tgz C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\tmp.tgz
90 silly lockFile 5071c045-92366-0-9706555898301303-tmp-tgz C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\tmp.tgz
91 verbose from cache C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\package\package.json
92 verbose tar pack [ 'C:\\Users\\Jed\\AppData\\Roaming\\npm-cache\\gitlike-cli\\0.0.1\\package.tgz',
92 verbose tar pack   'C:\\Users\\Jed\\AppData\\Local\\Temp\\npm-2108\\1370242992366-0.9706555898301303\\package' ]
93 verbose tarball C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz
94 verbose folder C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\package
95 silly lockFile b8ea29b3-92366-0-9706555898301303-package C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\package
96 verbose lock C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\package C:\Users\Jed\AppData\Roaming\npm-cache\b8ea29b3-92366-0-9706555898301303-package.lock
97 silly lockFile 83293bc0-he-gitlike-cli-0-0-1-package-tgz C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz
98 verbose lock C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz C:\Users\Jed\AppData\Roaming\npm-cache\83293bc0-he-gitlike-cli-0-0-1-package-tgz.lock
99 silly lockFile b8ea29b3-92366-0-9706555898301303-package C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\package
100 silly lockFile b8ea29b3-92366-0-9706555898301303-package C:\Users\Jed\AppData\Local\Temp\npm-2108\1370242992366-0.9706555898301303\package
101 silly lockFile 83293bc0-he-gitlike-cli-0-0-1-package-tgz C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz
102 silly lockFile 83293bc0-he-gitlike-cli-0-0-1-package-tgz C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz
103 silly lockFile fac9a100--cache-gitlike-cli-0-0-1-package C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package
104 verbose lock C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package C:\Users\Jed\AppData\Roaming\npm-cache\fac9a100--cache-gitlike-cli-0-0-1-package.lock
105 silly lockFile fac9a100--cache-gitlike-cli-0-0-1-package C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package
106 silly lockFile fac9a100--cache-gitlike-cli-0-0-1-package C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package
107 verbose tar unpack C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz
108 silly lockFile fac9a100--cache-gitlike-cli-0-0-1-package C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package
109 verbose lock C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package C:\Users\Jed\AppData\Roaming\npm-cache\fac9a100--cache-gitlike-cli-0-0-1-package.lock
110 silly lockFile 83293bc0-he-gitlike-cli-0-0-1-package-tgz C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz
111 verbose lock C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz C:\Users\Jed\AppData\Roaming\npm-cache\83293bc0-he-gitlike-cli-0-0-1-package-tgz.lock
112 silly gunzTarPerm modes [ '755', '644' ]
113 silly gunzTarPerm extractEntry package.json
114 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
115 silly gunzTarPerm extractEntry .npmignore
116 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
117 silly gunzTarPerm extractEntry README.md
118 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
119 silly gunzTarPerm extractEntry index.js
120 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
121 silly gunzTarPerm extractEntry .editorconfig
122 silly gunzTarPerm modified mode [ '.editorconfig', 438, 420 ]
123 silly gunzTarPerm extractEntry .gitattributes
124 silly gunzTarPerm modified mode [ '.gitattributes', 438, 420 ]
125 silly gunzTarPerm extractEntry .travis.yml
126 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
127 silly gunzTarPerm extractEntry examples/coercion
128 silly gunzTarPerm modified mode [ 'examples/coercion', 438, 420 ]
129 silly gunzTarPerm extractEntry examples/custom-help
130 silly gunzTarPerm modified mode [ 'examples/custom-help', 438, 420 ]
131 silly gunzTarPerm extractEntry examples/defaults
132 silly gunzTarPerm modified mode [ 'examples/defaults', 438, 420 ]
133 silly gunzTarPerm extractEntry examples/deploy
134 silly gunzTarPerm modified mode [ 'examples/deploy', 438, 420 ]
135 silly gunzTarPerm extractEntry examples/express
136 silly gunzTarPerm modified mode [ 'examples/express', 438, 420 ]
137 silly gunzTarPerm extractEntry examples/help
138 silly gunzTarPerm modified mode [ 'examples/help', 438, 420 ]
139 silly gunzTarPerm extractEntry examples/pizza
140 silly gunzTarPerm modified mode [ 'examples/pizza', 438, 420 ]
141 silly gunzTarPerm extractEntry examples/pm
142 silly gunzTarPerm modified mode [ 'examples/pm', 438, 420 ]
143 silly gunzTarPerm extractEntry examples/pm-install
144 silly gunzTarPerm modified mode [ 'examples/pm-install', 438, 420 ]
145 silly gunzTarPerm extractEntry lib/Argument.js
146 silly gunzTarPerm modified mode [ 'lib/Argument.js', 438, 420 ]
147 silly gunzTarPerm extractEntry lib/CLIError.js
148 silly gunzTarPerm modified mode [ 'lib/CLIError.js', 438, 420 ]
149 silly gunzTarPerm extractEntry lib/CLIObject.js
150 silly gunzTarPerm modified mode [ 'lib/CLIObject.js', 438, 420 ]
151 silly gunzTarPerm extractEntry lib/Command.js
152 silly gunzTarPerm modified mode [ 'lib/Command.js', 438, 420 ]
153 silly gunzTarPerm extractEntry lib/Option.js
154 silly gunzTarPerm modified mode [ 'lib/Option.js', 438, 420 ]
155 silly gunzTarPerm extractEntry lib/util/array.js
156 silly gunzTarPerm modified mode [ 'lib/util/array.js', 438, 420 ]
157 silly gunzTarPerm extractEntry lib/util/index.js
158 silly gunzTarPerm modified mode [ 'lib/util/index.js', 438, 420 ]
159 silly gunzTarPerm extractEntry lib/util/object.js
160 silly gunzTarPerm modified mode [ 'lib/util/object.js', 438, 420 ]
161 silly gunzTarPerm extractEntry lib/util/string.js
162 silly gunzTarPerm modified mode [ 'lib/util/string.js', 438, 420 ]
163 silly gunzTarPerm extractEntry test/Argument.js
164 silly gunzTarPerm modified mode [ 'test/Argument.js', 438, 420 ]
165 silly gunzTarPerm extractEntry test/Command.js
166 silly gunzTarPerm modified mode [ 'test/Command.js', 438, 420 ]
167 silly gunzTarPerm extractEntry test/Option.js
168 silly gunzTarPerm modified mode [ 'test/Option.js', 438, 420 ]
169 verbose read json C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package\package.json
170 silly lockFile fac9a100--cache-gitlike-cli-0-0-1-package C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package
171 silly lockFile fac9a100--cache-gitlike-cli-0-0-1-package C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package
172 silly lockFile 83293bc0-he-gitlike-cli-0-0-1-package-tgz C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz
173 silly lockFile 83293bc0-he-gitlike-cli-0-0-1-package-tgz C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz
174 silly shasum updated bytes 12867
175 info shasum e40ddeb92559ce90c3fd50ffdd939fa3fd3cb32a
175 info shasum C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz
176 verbose from cache C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package\package.json
177 verbose chmod C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz 644
178 silly chown skipping for windows C:\Users\Jed\AppData\Roaming\npm-cache\gitlike-cli\0.0.1\package.tgz
179 silly lockFile 3a52ce78- .
180 silly publish { name: 'gitlike-cli',
180 silly publish   version: '0.0.1',
180 silly publish   description: 'A git-like CLI library',
180 silly publish   keywords: [ 'git', 'cli' ],
180 silly publish   author: { name: 'Jed Hunsaker' },
180 silly publish   contributors: [ { name: 'Jed Hunsaker', email: 'jed.hunsaker[at]gmail.com' } ],
180 silly publish   main: 'index.js',
180 silly publish   directories: { lib: './lib' },
180 silly publish   scripts: { test: 'mocha -R spec' },
180 silly publish   repository:
180 silly publish    { type: 'git',
180 silly publish      url: 'git://github.com/jedhunsaker/gitlike-cli.git' },
180 silly publish   bugs: 'https://github.com/jedhunsaker/gitlike-cli/issues',
180 silly publish   license: 'MIT',
180 silly publish   devDependencies: { chai: '~1.6.0', mocha: '~1.10.0', sinon: '~1.7.2' },
180 silly publish   readme: '# Git-like CLI\n\nA git-like [CLI][] for [Node.js][] command-line interfaces, inspired by\n[tjholowaychuk\'s][] [commander][], meant to give you the flexibility and power\nakin to the [git command and its sub-commands][] (e.g., [git commit][]).\n\nWith Git-like CLI, you can create sub-commands as deep as you want.\n\nPerhaps unique to Git-like CLI, you can easily create crazy argument\ncombinations, mixing required, optional, required-repeating and\noptional-repeating arguments to your liking, as long as they aren\'t\nambiguous.\n\nWhat you won\'t find in Git-like CLI are some [commander][] features, such\nas prompts, password masking, confirm and choose. If you need these features,\n[commander][] is highly recommended.\n\n[![Build Status][]](http://travis-ci.org/jedhunsaker/gitlike-cli)\n\n\n## Installation\n\n    $ npm install gitlike-cli\n\n\n## Getting Started\n\n```js\nvar program = require(\'gitlike-cli\');\nprogram.parse(process.argv);\n```\n\nThe above example is a program that really does nothing at all; however, enough\ninformation is provided to generate some basic help information.\n\n```\n$ foo --help\n\n  Usage: foo [options]\n\n  Options:\n\n    -h, --help  output help information\n```\n\nThe help information is auto-generated based on the information the CLI\nalready knows about your program. Auto-generated help information will also\nbe added for any custom options you define for your application. Adding a\nversion will have the same effect.\n\n```js\nprogram\n    .version(\'0.1.2\')\n    .parse(process.argv);\n```\n\nProduces the following options:\n\n```\n    -h, --help     output help information\n    -V, --version  output version information\n```\n\nYou can output help or version information from code by calling the respective\n`.help(die)` or `.version(die)` methods. The `die` argument, if true, will\nsimply call `process.exit()` for you.\n\n\n## Usage\n\nProviding usage information gives the CLI more information about how your\nprogram can be used.\n\n```js\nprogram.usage(\'foo <bar>\');\n```\n\nThis tells the CLI that your command is named `foo` and requires a single\nargument, named `<bar>`. The chevrons around `bar` designate `<bar>` as a\nrequired argument. If `<bar>` is not provided, the help information will\nautomatically display.\n\nCalling the usage method without any arguments will display the generated\nusage information.\n\n```js\nprogram.usage(\'foo <bar>\').usage();\n```\n\nProduces the following:\n\n```\n  Usage: foo [options] <bar>\n```\n\n\n## Arguments\n\nThere are four different types of arguments you can supply.\n\n1. Required: `<arg>`\n1. Required, repeating: `<args>...`\n1. Optional: `[arg]`\n1. Optional, repeating: `[<args>...]`\n\nYou can combine any number of arguments you want; however, be aware that some\ncombinations are ambiguous and will throw an error. There are only two\nscenarios for this to happen:\n\n1. CommandError: Cannot have more than one repeating arg.\n1. CommandError: Cannot have an optional arg after a repeating arg.\n\nThese errors will be thrown when you provide usage information. When arguments\nare parsed, they will be stored in the program\'s `args` property. For example,\nif the argument is named `<bar>`, like above, calling `$ foo qux` will store\nthe string `qux` in `program.args.bar`.\n\nRepeating arguments will be stored as arrays.\n\nUnconsumed arguments will be stored in `program.args.etc` as an array.\n\nYou now need to understand how multiple arguments are parsed:\n\n1. Arguments will be parsed from left to right, always.\n1. Required args will never be skipped and will throw errors if not enough\n   args are supplied to fulfill the total number of required args.\n1. Optional args will only be skipped if there are not enough args supplied to\n   fill them.\n1. A repeating arg will consume as many args as it can, but will reserve slots\n   for any required arguments that follow.\n\nExample usage: `[<foo>...] <bar> <baz>`\n\n+ Parsing `x y` produces `{bar:\'x\', baz:\'y\'}`\n+ Parsing `a b c x y` produces `{foo:[\'a\',\'b\',\'c\'], bar:\'x\', baz:\'y\'}`\n\nExample usage: `[foo] [bar] <baz>`\n\n+ Parsing `x` produces `{baz:\'x\'}`\n+ Parsing `x y` produces `{foo:\'x\', baz:\'y\'}`\n+ Parsing `x y z` produces `{foo:\'x\', baz:\'y\', bar:\'z\'}`\n\n\n## Options\n\nOptions are defined with the `.option()` method, also serving as documentation\nfor the options. The example below parses args and options from `process.argv`.\n\n```js\nprogram\n    .option(\'-p, --peppers\', \'Add peppers\')\n    .option(\'-P, --pineapple\', \'Add pineapple\')\n    .option(\'-b, --bbq\', \'Add bbq sauce\')\n    .option(\'-c, --cheese <type>\', \'Add the specified type of cheese [marble]\', \'marble\')\n    .option(\'-C, --no-cheese\', \'You do not want any cheese\')\n    .parse(process.argv);\n\nvar options = program.options;\nconsole.log(\'you ordered a pizza with:\');\nif (options.peppers) console.log(\'  - peppers\');\nif (options.pineapple) console.log(\'  - pineapple\');\nif (options.bbq) console.log(\'  - bbq\');\nconsole.log(\'  - %s cheese\', options.cheese || \'no\');\n```\n\nOptions can have `[optional]` or `<required>` arguments attached to them, but\nnot `<repeating>...` arguments.\n\nShort flags may be passed as a single arg, for example `-abc` is equivalent to\n`-a -b -c`. Multi-word options such as "--template-engine" are camel-cased,\nbecoming `program.options.templateEngine`.\n\nShort combo flags with multiple args follow the same rules for parsing as do\narguments. For example, if `-abc` flags all have args attached to them, then\n`-abc foo bar baz` will assign the appropriate values, from left to right.\n\nOptional args, again, follow the same rules as command args. This differs from\ngit\'s CLI, but in a good way. Sure, `git commit -am "stuff"` parses `-m` as\n`"stuff"`, but `git commit -ma "stuff"` throws an error. Git-like CLI, knowing\nthat `-m` has a required `<msg>` argument and `-a` has no argument at all, is\nsmart enough to parse this command gracefully and without errors.\n\n\n## Coercion\n\nGit-like CLI uses `JSON.parse()` to parse values. This means you can parse\nintegers, floats, booleans, arrays and even JSON objects out of the box.\nFurthermore, you can pass a callback function as an additional option argument\nif you need more custom control over the result.\n\n```js\nfunction range(val) {\n  return val.split(\'..\').map(Number) || [];\n}\n\nfunction list(val) {\n  return val.split(\',\');\n}\n\nfunction square(val) {\n  return val * val;\n}\n\nprogram\n  .version(\'0.0.1\')\n  .usage(\'[options] <file>...\')\n  .option(\'-s, --square <x>\', \'A square of x\', square)\n  .option(\'-r, --range <a>..<b>\', \'A range\', range)\n  .option(\'-l, --list <items>\', \'A list\', list)\n  .option(\'-o, --optional [value]\', \'An optional value\')\n  .parse(process.argv);\n\nconsole.log(\' square: %j\', program.square);\nconsole.log(\' range: %j..%j\', program.range[0], program.range[1]);\nconsole.log(\' list: %j\', program.list);\nconsole.log(\' optional: %j\', program.optional);\nconsole.log(\' args: %j\', program.args);\n```\n\n## Custom help\n\nYou can display arbitrary `-h, --help` information by listening for "help".\nThe program will automatically exit once you are done so that the remainder of\nyour program does not execute causing undesired behaviours. For example, in the\nfollowing executable "stuff" will not output when `help` is used.\n\n```js\nvar program = require(\'../\');\n\nfunction list(val) {\n  return val.split(\',\').map(Number);\n}\n\nprogram\n  .version(\'0.0.1\')\n  .option(\'-f, --foo\', \'enable some foo\')\n  .option(\'-b, --bar\', \'enable some bar\')\n  .option(\'-B, --baz\', \'enable some baz\');\n\n// must be before .parse() since\n// node\'s emit() is immediate\n\nprogram.on(\'help\', function(){\n  console.log(\'  Examples:\');\n  console.log();\n  console.log(\'    $ custom-help --help\');\n  console.log(\'    $ custom-help -h\');\n  console.log();\n});\n\nprogram.parse(process.argv);\n\nconsole.log(\'stuff\');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## License\n\n```\nThe MIT License (MIT)\n\nCopyright (c) <2013> Jed Hunsaker\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```\n\n[CLI]: http://en.wikipedia.org/wiki/Command-line_interface\n[node.js]: http://nodejs.org\n[tjholowaychuk\'s]: https://npmjs.org/~tjholowaychuk\n[commander]: https://npmjs.org/package/commander\n[git command and its sub-commands]: http://git-scm.com/docs\n[git commit]: http://git-scm.com/docs/git-commit\n[Build Status]: https://secure.travis-ci.org/jedhunsaker/gitlike-cli.png\n',
180 silly publish   readmeFilename: 'README.md',
180 silly publish   _id: 'gitlike-cli@0.0.1',
180 silly publish   dist: { shasum: 'e40ddeb92559ce90c3fd50ffdd939fa3fd3cb32a' },
180 silly publish   _from: '.' }
181 verbose url raw gitlike-cli
182 verbose url resolving [ 'https://registry.npmjs.org/', './gitlike-cli' ]
183 verbose url resolved https://registry.npmjs.org/gitlike-cli
184 info trying registry request attempt 1 at 00:03:22
185 http PUT https://registry.npmjs.org/gitlike-cli
186 http 409 https://registry.npmjs.org/gitlike-cli
187 verbose url raw gitlike-cli
188 verbose url resolving [ 'https://registry.npmjs.org/', './gitlike-cli' ]
189 verbose url resolved https://registry.npmjs.org/gitlike-cli
190 info trying registry request attempt 1 at 00:03:22
191 http GET https://registry.npmjs.org/gitlike-cli
192 http 200 https://registry.npmjs.org/gitlike-cli
193 error publish fail Cannot publish over existing version.
193 error publish fail Update the 'version' field in package.json and try again.
193 error publish fail
193 error publish fail If the previous version was published in error, see:
193 error publish fail     npm help unpublish
193 error publish fail
193 error publish fail To automatically increment version numbers, see:
193 error publish fail     npm help version
194 error System Windows_NT 6.2.9200
195 error command "c:\\Program Files\\nodejs\\node.exe" "c:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
196 error cwd z:\Documents\GitHub\gitlike-cli
197 error node -v v0.10.5
198 error npm -v 1.2.18
199 error code EPUBLISHCONFLICT
200 verbose exit [ 1, true ]
